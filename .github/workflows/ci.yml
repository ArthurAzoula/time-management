name: Elixir CI

env:
  MIX_ENV: test

permissions:
  contents: read

on:
  push:
    branches:
      - '*'
      # all except the following
      - '!master'
      - '!main'  
  pull_request:
    branches:
      - '*'
      # all except the following
      - '!master'
      - '!main'

jobs:
  test:
    services:
      db:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: timepassword
          POSTGRES_USER: timeuser
          POSTGRES_DB: timemanagement
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['27.0.0']       
        elixir: ['1.17.3']   
    steps:
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: app/deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Clean to rule out incremental build as a source of flakiness
      if: github.run_attempt != '1'
      run: cd app && mix deps.clean --all && mix clean
      shell: sh

    - name: Install dependencies
      run: cd app && mix deps.get

    - name: Compiles without warnings
      run: cd app && mix compile --warnings-as-errors

    - name: Check Formatting
      run: cd app && mix format --check-formatted

    - name: Setup database
      run: cd app && mix ecto.create && mix ecto.migrate && mix run priv/repo/seeds.exs

    - name: Run tests
      run: cd app && mix test
